/*
 * Adzerk Decision API
 * Adzerk Decision API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adzerk.sdk.generated.api;

import com.adzerk.sdk.generated.ApiException;
import com.adzerk.sdk.generated.model.GdprConsent;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserdbApi
 */
@Ignore
public class UserdbApiTest {

    private final UserdbApi api = new UserdbApi();

    
    /**
     * 
     *
     * Add Custom Properties to a User
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCustomPropertiesTest() throws ApiException {
        String azk = null;
        Integer networkId = null;
        Object body = null;
        api.addCustomProperties(azk, networkId, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Add Interests to a User
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addInterestsTest() throws ApiException {
        Integer networkId = null;
        String userKey = null;
        String interest = null;
        api.addInterests(networkId, userKey, interest);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Add User to a Retargeting Segment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addRetargetingSegmentTest() throws ApiException {
        String azk = null;
        Integer networkId = null;
        Integer advertiserId = null;
        Integer retargetingSegmentId = null;
        api.addRetargetingSegment(azk, networkId, advertiserId, retargetingSegmentId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Forget User
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forgetTest() throws ApiException {
        Integer networkId = null;
        String userKey = null;
        api.forget(networkId, userKey);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * GDPR Consent
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gdprConsentTest() throws ApiException {
        Integer networkId = null;
        GdprConsent gdprConsent = null;
        api.gdprConsent(networkId, gdprConsent);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * IP Address Override
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void ipOverrideTest() throws ApiException {
        Integer networkId = null;
        String azk = null;
        String ip = null;
        Object response = api.ipOverride(networkId, azk, ip);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * User Matching
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void matchUserTest() throws ApiException {
        String azk = null;
        Integer networkId = null;
        Integer partnerId = null;
        Integer userId = null;
        api.matchUser(azk, networkId, partnerId, userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Opt-Out a User
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void optOutTest() throws ApiException {
        String azk = null;
        Integer networkId = null;
        api.optOut(azk, networkId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Read a User&#39;s UserDB Record
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readTest() throws ApiException {
        String azk = null;
        Integer networkId = null;
        Object response = api.read(azk, networkId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Set User Cookie
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setUserCookieTest() throws ApiException {
        Integer networkId = null;
        String userKey = null;
        api.setUserCookie(networkId, userKey);

        // TODO: test validations
    }
    
}
